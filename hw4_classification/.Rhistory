}
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
head(flights)
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
# Standardize the data
df.sample[,2:4] <- scale(df.sample[,2:4])
# Split the data into a train and test set
train_ind <- sample(1:nrow(df.sample), nrow(df.sample) * 0.7)
test_ind <- (1:nrow(df.sample))[-train_ind]
train_set <- df.sample[train_ind,]
test_set <- df.sample[test_ind,]
train_labels <- df.sample$carrier[train_ind]
test_labels <- df.sample$carrier[test_ind]
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
which(df.sample, is.na())
which(is.na(df.sample))
is.na(df.sample)
filter(df.sample, is.na(df.sample))
filter(df.sample, is.na(df.sample) == TRUE)
df.sample[is.na(df.sample)]
df.sample[is.na(df.sample),]
df.sample[is.na(df.sample)]
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
head(flights)
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
df.sample$carrier <- as.sample(carrier)
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
head(flights)
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
df.sample$carrier <- as.factor(carrier)
head(df.sample)
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
head(flights)
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
df.sample$carrier <- as.factor(df.sample$carrier)
# Standardize the data
df.sample[,2:4] <- scale(df.sample[,2:4])
# Split the data into a train and test set
train_ind <- sample(1:nrow(df.sample), nrow(df.sample) * 0.7)
test_ind <- (1:nrow(df.sample))[-train_ind]
train_set <- df.sample[train_ind,]
test_set <- df.sample[test_ind,]
train_labels <- df.sample$carrier[train_ind]
test_labels <- df.sample$carrier[test_ind]
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
structure(train_set)
structure(train_labels)
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
head(flights)
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
df.sample$carrier <- as.factor(df.sample$carrier)
# Standardize the data
df.sample[,2:4] <- scale(df.sample[,2:4])
# Split the data into a train and test set
train_ind <- sample(1:nrow(df.sample), nrow(df.sample) * 0.7)
test_ind <- (1:nrow(df.sample))[-train_ind]
train_set <- df.sample[train_ind,]
test_set <- df.sample[test_ind,]
train_labels <- df.sample$carrier[train_ind]
test_labels <- df.sample$carrier[test_ind]
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
train_itr_labs <- train_labels[folds != 1]
train_itr_labs
df.sample[is.na(df.sample$carrier)]
df.sample[is.na(df.sample)]
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
#n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
#t_error <- n_missclass / length(test_itr_labs)
#test_error_itr[s] = t_error
}
#test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
train_set
test_set
train_set <- df.sample[train_ind, 2:4]
train_set
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
head(flights)
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
df.sample$carrier <- as.factor(df.sample$carrier)
# Standardize the data
df.sample[,2:4] <- scale(df.sample[,2:4])
# Split the data into a train and test set
train_ind <- sample(1:nrow(df.sample), nrow(df.sample) * 0.7)
test_ind <- (1:nrow(df.sample))[-train_ind]
train_set <- df.sample[train_ind, 2:4]
test_set <- df.sample[test_ind, 2:4]
train_labels <- df.sample$carrier[train_ind]
test_labels <- df.sample$carrier[test_ind]
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
test_erros
test_errors
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
colnames(test_errors) <- paste("k=", 1:kmax, sep="")
rownames(test_errors) = c("mean(test_error)", "sd(test_error)")
test_errors = as.data.frame(test_errors)
k_hat <- which(test_errors[1,] == min(test_errors[1,]))
k_hat
test_errors
head(train_set)
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
colnames(test_errors) <- paste("k=", 1:kmax, sep="")
rownames(test_errors) = c("mean(test_error)", "sd(test_error)")
test_errors = as.data.frame(test_errors)
k_hat <- which(test_errors[1,] == min(test_errors[1,]))
k_hat
knn_test <- knn(train_set, test_set, train_labels, k_hat)
n_missclass_test <- sum(1 - as.numeric(knn_test == test_labels))
t_error_test <- n_missclass_test / length(test_labels)
t_error_test
table(knn_test, test_labels)
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
colnames(test_errors) <- paste("k=", 1:kmax, sep="")
rownames(test_errors) = c("mean(test_error)", "sd(test_error)")
test_errors = as.data.frame(test_errors)
k_hat <- which(test_errors[1,] == min(test_errors[1,]))
k_hat
knn_test <- knn(train_set, test_set, train_labels, k_hat)
n_missclass_test <- sum(1 - as.numeric(knn_test == test_labels))
t_error_test <- n_missclass_test / length(test_labels)
t_error_test
table(knn_test, test_labels)
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
head(flights)
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
df.sample$carrier <- as.factor(df.sample$carrier)
# Standardize the data
df.sample[,2:4] <- scale(df.sample[,2:4])
# Split the data into a train and test set
train_ind <- sample(1:nrow(df.sample), nrow(df.sample) * 0.7)
test_ind <- (1:nrow(df.sample))[-train_ind]
train_set <- df.sample[train_ind, 2:4]
test_set <- df.sample[test_ind, 2:4]
train_labels <- df.sample$carrier[train_ind]
test_labels <- df.sample$carrier[test_ind]
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
colnames(test_errors) <- paste("k=", 1:kmax, sep="")
rownames(test_errors) = c("mean(test_error)", "sd(test_error)")
test_errors = as.data.frame(test_errors)
k_hat <- which(test_errors[1,] == min(test_errors[1,]))
k_hat
knn_test <- knn(train_set, test_set, train_labels, k_hat)
n_missclass_test <- sum(1 - as.numeric(knn_test == test_labels))
t_error_test <- n_missclass_test / length(test_labels)
t_error_test
table(knn_test, test_labels)
set.seed(123)
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
colnames(test_errors) <- paste("k=", 1:kmax, sep="")
rownames(test_errors) = c("mean(test_error)", "sd(test_error)")
test_errors = as.data.frame(test_errors)
k_hat <- which(test_errors[1,] == min(test_errors[1,]))
k_hat
knn_test <- knn(train_set, test_set, train_labels, k_hat)
n_missclass_test <- sum(1 - as.numeric(knn_test == test_labels))
t_error_test <- n_missclass_test / length(test_labels)
t_error_test
table(knn_test, test_labels)
set.seed(123)
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
colnames(test_errors) <- paste("k=", 1:kmax, sep="")
rownames(test_errors) = c("mean(test_error)", "sd(test_error)")
test_errors = as.data.frame(test_errors)
k_hat <- which(test_errors[1,] == min(test_errors[1,]))
k_hat
knn_test <- knn(train_set, test_set, train_labels, k_hat)
n_missclass_test <- sum(1 - as.numeric(knn_test == test_labels))
t_error_test <- n_missclass_test / length(test_labels)
t_error_test
table(knn_test, test_labels)
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
head(flights)
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
df.sample$carrier <- as.factor(df.sample$carrier)
# Standardize the data
df.sample[,2:4] <- scale(df.sample[,2:4])
# Split the data into a train and test set
train_ind <- sample(1:nrow(df.sample), nrow(df.sample) * 0.7)
test_ind <- (1:nrow(df.sample))[-train_ind]
train_set <- df.sample[train_ind, 2:4]
test_set <- df.sample[test_ind, 2:4]
train_labels <- df.sample$carrier[train_ind]
test_labels <- df.sample$carrier[test_ind]
set.seed(123)
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
colnames(test_errors) <- paste("k=", 1:kmax, sep="")
rownames(test_errors) = c("mean(test_error)", "sd(test_error)")
test_errors = as.data.frame(test_errors)
k_hat <- which(test_errors[1,] == min(test_errors[1,]))
k_hat
knn_test <- knn(train_set, test_set, train_labels, k_hat)
n_missclass_test <- sum(1 - as.numeric(knn_test == test_labels))
t_error_test <- n_missclass_test / length(test_labels)
t_error_test
table(knn_test, test_labels)
m <- 10
folds <- sample(1:m, nrow(train_set), replace = TRUE)
kmax = 15
test_errors <- matrix(0, nrow=2, ncol=kmax)
for (k in 1:kmax) {
test_error_itr = double(m)
for (s in 1:m) {
train_itr <- train_set[folds != s, ]
test_itr <- train_set[folds == s, ]
train_itr_labs <- train_labels[folds != s]
test_itr_labs <- train_labels[folds == s]
knn_itr <- knn(train_itr, test_itr, train_itr_labs, k)
n_missclass <- sum(1 - as.numeric(knn_itr == test_itr_labs))
t_error <- n_missclass / length(test_itr_labs)
test_error_itr[s] = t_error
}
test_errors[,k] = c(mean(test_error_itr), sd(test_error_itr))
}
colnames(test_errors) <- paste("k=", 1:kmax, sep="")
rownames(test_errors) = c("mean(test_error)", "sd(test_error)")
test_errors = as.data.frame(test_errors)
k_hat <- which(test_errors[1,] == min(test_errors[1,]))
k_hat
knn_test <- knn(train_set, test_set, train_labels, k_hat)
n_missclass_test <- sum(1 - as.numeric(knn_test == test_labels))
t_error_test <- n_missclass_test / length(test_labels)
t_error_test
table(knn_test, test_labels)
install.packages('tinytex')
library(tinytex)
library(Miktex)
library(miktex)
install.packages('miktex')
install.packages('xelatex')
install.packages('lualatex')
library(tidyverse)
library(nycflights13)
library(class)
set.seed(123)
df <- flights
# Subset the data
df <- df %>% filter(carrier %in% c('UA', 'AA', 'DL')) %>%
select('carrier', 'dep_delay', 'arr_delay', 'distance') %>%
na.omit()
# Take 500 samples from the data
df.sample <- df[sample(nrow(df), 500), ]
df.sample$carrier <- as.factor(df.sample$carrier)
